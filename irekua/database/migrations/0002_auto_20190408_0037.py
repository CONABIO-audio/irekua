# Generated by Django 2.1.7 on 2019-04-08 05:37

import database.models.items.secondary_items
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('database', '0001_initial'),
    ]

    operations = [
        migrations.RemoveField(
            model_name='collectionuser',
            name='is_admin',
        ),
        migrations.RemoveField(
            model_name='secondaryitem',
            name='path',
        ),
        migrations.AddField(
            model_name='collection',
            name='administrators',
            field=models.ManyToManyField(blank=True, help_text='Administrators of collection', related_name='collection_administrators', to=settings.AUTH_USER_MODEL, verbose_name='administrators'),
        ),
        migrations.AddField(
            model_name='metacollection',
            name='curators',
            field=models.ManyToManyField(blank=True, help_text='Curators of metacollection', related_name='metacollection_curators', to=settings.AUTH_USER_MODEL, verbose_name='curators'),
        ),
        migrations.AddField(
            model_name='secondaryitem',
            name='item_file',
            field=models.FileField(blank=True, db_column='item_file', help_text='Upload file associated to file', null=True, upload_to=database.models.items.secondary_items.get_item_path, verbose_name='item file'),
        ),
        migrations.AlterField(
            model_name='metacollection',
            name='created_by',
            field=models.ForeignKey(blank=True, db_column='created_by', help_text='Creator of Meta Collection', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='metacollection_created_by', to=settings.AUTH_USER_MODEL, verbose_name='created by'),
        ),
        migrations.AlterField(
            model_name='metacollection',
            name='items',
            field=models.ManyToManyField(blank=True, help_text='Items belonging to MetaCollection', to='database.Item', verbose_name='items'),
        ),
    ]

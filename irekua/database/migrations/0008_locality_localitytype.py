# Generated by Django 2.2.5 on 2019-10-01 18:05

import database.utils
import django.contrib.gis.db.models.fields
import django.contrib.postgres.fields.jsonb
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('database', '0007_auto_20190917_1802'),
    ]

    operations = [
        migrations.CreateModel(
            name='LocalityType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_column='name', help_text='Name of locality', max_length=128)),
                ('description', models.TextField(blank=True, db_column='description', help_text='Description of type of locality', verbose_name='description')),
                ('source', models.CharField(blank=True, db_column='source', help_text='Source of information for localities of this type', max_length=128, verbose_name='source')),
                ('original_datum', models.TextField(blank=True, db_column='original_datum', help_text='Datum used for the original coordinates for localities of this type', verbose_name='original datum')),
                ('metadata_schema', django.contrib.postgres.fields.jsonb.JSONField(blank=True, db_column='metadata_schema', default=database.utils.empty_JSON, help_text='JSON Schema for metadata of localities of this type', null=True, verbose_name='metadata_schema')),
            ],
            options={
                'verbose_name': 'Location Type',
                'verbose_name_plural': 'Location Types',
                'ordering': ['-name'],
            },
        ),
        migrations.CreateModel(
            name='Locality',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_column='name', help_text='Name of locality', max_length=128)),
                ('description', models.TextField(blank=True, db_column='description', help_text='Description of the locality', verbose_name='description')),
                ('geometry', django.contrib.gis.db.models.fields.MultiPolygonField(blank=True, db_column='geometry', help_text='Geometry of locality', srid=4326, verbose_name='geometry')),
                ('metadata', django.contrib.postgres.fields.jsonb.JSONField(blank=True, db_column='metadata', default=database.utils.empty_JSON, help_text='Metadata associated to locality', null=True, verbose_name='metadata')),
                ('is_part_of', models.ManyToManyField(to='database.Locality')),
                ('locality_type', models.ForeignKey(db_column='locality_type_id', help_text='Type of locality', on_delete=django.db.models.deletion.PROTECT, to='database.LocalityType', verbose_name='locality type')),
            ],
            options={
                'verbose_name': 'Location',
                'verbose_name_plural': 'Locations',
                'ordering': ['-name'],
            },
        ),
    ]
